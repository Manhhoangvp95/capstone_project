# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@8.2.1
jobs:
  lint-test:
    docker:
    # Use the same Docker base as the project
      - image: python:3.7.3-stretch

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
                chmod +x /bin/hadolint
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # run lint!
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint
            hadolint Dockerfile
  aws-ecr:
    docker:
      - image: cimg/base:stable
    steps:
      - setup_remote_docker:
          version: 20.10.11
      - aws-ecr/build-and-push-image:
          dockerfile: Dockerfile
          repo: manhhoang
          tag: latest,$CIRCLE_SHA1

  aws-eks:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Install tar
          command: |
            yum -y install tar gzip gettext
      - run:
          name: Install dependencies
          command: |
            curl -o /tmp/kubectl https://s3.us-west-2.amazonaws.com/amazon-eks/1.24.7/2022-10-31/bin/linux/amd64/kubectl &&\
            chmod +x /tmp/kubectl
            mv /tmp/kubectl /usr/local/bin
            curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
            mv /tmp/eksctl /usr/local/bin
            

      - run:
          name: Create cluster
          command: |
            chmod +x run_create_cluster.sh && \
            ./run_create_cluster.sh
      - run:
          name: Deploy Kubenetes to eks
          command: |
            chmod +x deploy.sh && \
            ./deploy.sh


workflows:
  default:
    jobs:
      - lint-test
      - aws-ecr:
          filters:
            branches:
              only:
                - master
          requires: [lint-test]
      - aws-eks:
          requires: [aws-ecr]
